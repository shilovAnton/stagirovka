1. Какие виды требований можно выделить?
    - организационные
    - пользовательские
    - функциональные
    - нефункциональные

2. Как отличить функциональные и пользовательские требования?

    Функциональные и пользовательские требования можно отличить по истонику требований. 
    Функциональные требования исходят от аналитиков, а пользовательские требования 
    от пользователей системы. А также по этапу разработки ТЗ. пользовательские требования
    обнаруживаются на этапе сбора и анализа требований, функциональные, на этапе 
    разработки ТЗ и спецификаций. А также по формулировке. Пользовательские
    требования не имеют ограничений по формулировке, а фунуциональное требование
    должно быть сформулированно на языке работы с данными, а также содержать все 
    необходимые данные, на основании которых можно принять решение.

3. В чем отличие между функциональными и нефункциональными требованиями?

        Функциональные требования - это описание, какими функциями должна обладать система, 
    чиобы процессы реализовывались. Функциональные требования должны определять фундаментальные
    операции, которые должны применяться при приняти и обработке входных данных, а также
    при обработке и генерации выходных данных. Функциональные требования пишутся на основании 
    пользовательских требований. Зачастую, это выглядит так: "система должна формировать
    отчёт по количеству посещений пользователей сайта за один час".
        В свою очередь, нефункциональные требования - это требования, определяющиие
    свойства, которые система должна демонстрировать, или ограничения, которые она должна 
    соблюдать, не относящиеся к поведению системы. Например: "сайт должен выдерживать
    не менее 1000 посещений пользователей за один час". Или расширяемость, масштабируемость.

--------------------------------------------------------------------------------------------

Определи вид требований:

    1.Сайт по продаже женских сумок обеспечивает возможность посетителю сайта сэкономить 
    время подбора сумки к образу.
        - пользовательское

    2.Пользователь должен иметь возможность оформить заказ на сайте
        - пользовательское

    3.Система должна предоставить возможность пользователю с ролью Посетитель создать объект 
    Заказ, атрибуты которого: артикул товара, кол-во товара, цена товара
        - функциональное

    4.Система должна поддерживать одновременную работу не менее 20 пользователей
        - нефункциональное

    5.Система должна передавать в Систему для консультирования следующие 
    атрибуты Заявки “Запрос доступа”: Номер заявки, Дата и время, ФИО, Инициатор заявки
        - функциональное

    6.Сервер приложений сайта должен быть разработан на языке Java
        - нефункциональное

    7.Директору должен предоставляться отчет о статусе его заявки
        - пользовательское

    8.Система должна восстанавливаться после сбоя не более чем за 5 минут.
        - нефункциональное

    9.Система должна получать из Системы консультирования Ответ исполнителя в Систему, 
    включая следующий атрибуты: Номер заявки, Комментарий исполнителя, Статус заявки
        - функциональное

    10.Организация должна информировать Клиентов о факте использования их Персональных Данных
        - пользовательское

    11.Пользователь должен иметь возможность запросить доступ для оформления Заявки
        - пользовательское

    12.Средняя длительность обучения, необходимая для доведения результативности 
    выполнения сценариев пользователем до 95% не должна превышать 1 часа
        - нефункциональное

--------------------------------------------------------------------------------------------

Определи вид сценария:
1.Начальник позвал меня на юбилей на этой неделе. Черт его знает, что подарить – с одной стороны, 
у него все есть, с другой – мы не настолько близко общаемся, чтобы я знал о его предпочтениях. 
Мне в шутку посоветовали коньяк, хотя может в этом что-то есть. Я знаю, что он в прошлом году 
даже ездил куда-то в Италию на курсы сомелье – так что может не коньяк, а вино?
Правда неясно, как его выбирать: впарят какую-нибудь дорогую ерунду, а потом окажется, что пить 
это невозможно. Может просто взять что-то популярное?
Хорошо бы посоветовал кто-нибудь, кто в этом разбирается. А то я кроме «красное/белое» и 
«сухое/сладкое» даже не знаю, на что ориентироваться.
Ну и хорошо бы магазин поближе к работе был, чтобы в обед можно было заскочить. На худой 
конец – доставка домой после 19:00 тоже подойдет, но тогда лучше бы оплатить заранее – вдруг 
налички не будет.
Да, и главное – начальника впечатлить и удивить подарком, может как-то вручить оригинально.
    - пользовательская история

2.Люди с низкой квалификацией в винах смогут подобрать вино, в процессе получив некоторые знания 
о винах (советы по употреблению, интересные факты и легенды), и оставить заказ, выбрав наиболее 
подходящий вариант оплаты и способ доставки.
    - концептуальный сценарий

3.Борис Пожарский хочет купить вино в подарок начальнику на этой неделе. Вино должно быть 
«проверенным» (т.е. его качество должны подтверждать отзывы от других покупателей, награды 
и рейтинги экспертов). У вина должна быть красивая легенда, чтобы впечатлить начальника при вручении.
Борис выбирает вино с планшета (iPad), параллельно отвлекаясь на другие дела. Ему точно не 
хочется заполнять слишком много полей. Так что оплатить заказ лучше на месте.
После выбора вина по дороге в магазин Борис сверится с картой на планшете. По дороге, кстати 
говоря, доступа к Интернету может и не быть. 
Главное, чтобы выбранное вино было в наличии, когда он приедет.
    - конкретный сценарий

4.CRM-система должна отправлять СМС-напоминание клиенту о предстоящем посещении за сутки перед 
посещением, чтобы он помнил о приеме и пришел вовремя.
    - Agile пользовательская история

5.Администратор клиники должен иметь возможность просмотреть данные о прошлых и запланированных 
посещениях пациента в течение 3 секунд после определения личности клиента по номеру телефона 
входящего звонка, чтобы добавить новое или изменить запланированное посещение.
    - Agile пользовательская история
